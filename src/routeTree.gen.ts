/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NoneAuthRouteImport } from './routes/_noneAuth'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NoneAuthSignUpRouteImport } from './routes/_noneAuth/sign-up'
import { Route as NoneAuthLoginRouteImport } from './routes/_noneAuth/login'
import { Route as AuthenticatedPostIdRouteImport } from './routes/_authenticated/$postId'

const NoneAuthRoute = NoneAuthRouteImport.update({
  id: '/_noneAuth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NoneAuthSignUpRoute = NoneAuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => NoneAuthRoute,
} as any)
const NoneAuthLoginRoute = NoneAuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NoneAuthRoute,
} as any)
const AuthenticatedPostIdRoute = AuthenticatedPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$postId': typeof AuthenticatedPostIdRoute
  '/login': typeof NoneAuthLoginRoute
  '/sign-up': typeof NoneAuthSignUpRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$postId': typeof AuthenticatedPostIdRoute
  '/login': typeof NoneAuthLoginRoute
  '/sign-up': typeof NoneAuthSignUpRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_noneAuth': typeof NoneAuthRouteWithChildren
  '/_authenticated/$postId': typeof AuthenticatedPostIdRoute
  '/_noneAuth/login': typeof NoneAuthLoginRoute
  '/_noneAuth/sign-up': typeof NoneAuthSignUpRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$postId' | '/login' | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$postId' | '/login' | '/sign-up'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_noneAuth'
    | '/_authenticated/$postId'
    | '/_noneAuth/login'
    | '/_noneAuth/sign-up'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  NoneAuthRoute: typeof NoneAuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_noneAuth': {
      id: '/_noneAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NoneAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_noneAuth/sign-up': {
      id: '/_noneAuth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof NoneAuthSignUpRouteImport
      parentRoute: typeof NoneAuthRoute
    }
    '/_noneAuth/login': {
      id: '/_noneAuth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NoneAuthLoginRouteImport
      parentRoute: typeof NoneAuthRoute
    }
    '/_authenticated/$postId': {
      id: '/_authenticated/$postId'
      path: '/$postId'
      fullPath: '/$postId'
      preLoaderRoute: typeof AuthenticatedPostIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedPostIdRoute: typeof AuthenticatedPostIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedPostIdRoute: AuthenticatedPostIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface NoneAuthRouteChildren {
  NoneAuthLoginRoute: typeof NoneAuthLoginRoute
  NoneAuthSignUpRoute: typeof NoneAuthSignUpRoute
}

const NoneAuthRouteChildren: NoneAuthRouteChildren = {
  NoneAuthLoginRoute: NoneAuthLoginRoute,
  NoneAuthSignUpRoute: NoneAuthSignUpRoute,
}

const NoneAuthRouteWithChildren = NoneAuthRoute._addFileChildren(
  NoneAuthRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  NoneAuthRoute: NoneAuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
