/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ViewRouteImport } from './routes/_view'
import { Route as NoneAuthRouteImport } from './routes/_noneAuth'
import { Route as ViewIndexRouteImport } from './routes/_view/index'
import { Route as ViewAuthenticatedRouteImport } from './routes/_view/_authenticated'
import { Route as NoneAuthSignUpRouteImport } from './routes/_noneAuth/sign-up'
import { Route as NoneAuthLoginRouteImport } from './routes/_noneAuth/login'
import { Route as ViewAuthenticatedPostIdRouteImport } from './routes/_view/_authenticated/$postId'

const ViewRoute = ViewRouteImport.update({
  id: '/_view',
  getParentRoute: () => rootRouteImport,
} as any)
const NoneAuthRoute = NoneAuthRouteImport.update({
  id: '/_noneAuth',
  getParentRoute: () => rootRouteImport,
} as any)
const ViewIndexRoute = ViewIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ViewRoute,
} as any)
const ViewAuthenticatedRoute = ViewAuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => ViewRoute,
} as any)
const NoneAuthSignUpRoute = NoneAuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => NoneAuthRoute,
} as any)
const NoneAuthLoginRoute = NoneAuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NoneAuthRoute,
} as any)
const ViewAuthenticatedPostIdRoute = ViewAuthenticatedPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => ViewAuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof NoneAuthLoginRoute
  '/sign-up': typeof NoneAuthSignUpRoute
  '/': typeof ViewIndexRoute
  '/$postId': typeof ViewAuthenticatedPostIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof NoneAuthLoginRoute
  '/sign-up': typeof NoneAuthSignUpRoute
  '/': typeof ViewIndexRoute
  '/$postId': typeof ViewAuthenticatedPostIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_noneAuth': typeof NoneAuthRouteWithChildren
  '/_view': typeof ViewRouteWithChildren
  '/_noneAuth/login': typeof NoneAuthLoginRoute
  '/_noneAuth/sign-up': typeof NoneAuthSignUpRoute
  '/_view/_authenticated': typeof ViewAuthenticatedRouteWithChildren
  '/_view/': typeof ViewIndexRoute
  '/_view/_authenticated/$postId': typeof ViewAuthenticatedPostIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/sign-up' | '/' | '/$postId'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/sign-up' | '/' | '/$postId'
  id:
    | '__root__'
    | '/_noneAuth'
    | '/_view'
    | '/_noneAuth/login'
    | '/_noneAuth/sign-up'
    | '/_view/_authenticated'
    | '/_view/'
    | '/_view/_authenticated/$postId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NoneAuthRoute: typeof NoneAuthRouteWithChildren
  ViewRoute: typeof ViewRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_view': {
      id: '/_view'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ViewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_noneAuth': {
      id: '/_noneAuth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NoneAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_view/': {
      id: '/_view/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ViewIndexRouteImport
      parentRoute: typeof ViewRoute
    }
    '/_view/_authenticated': {
      id: '/_view/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ViewAuthenticatedRouteImport
      parentRoute: typeof ViewRoute
    }
    '/_noneAuth/sign-up': {
      id: '/_noneAuth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof NoneAuthSignUpRouteImport
      parentRoute: typeof NoneAuthRoute
    }
    '/_noneAuth/login': {
      id: '/_noneAuth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NoneAuthLoginRouteImport
      parentRoute: typeof NoneAuthRoute
    }
    '/_view/_authenticated/$postId': {
      id: '/_view/_authenticated/$postId'
      path: '/$postId'
      fullPath: '/$postId'
      preLoaderRoute: typeof ViewAuthenticatedPostIdRouteImport
      parentRoute: typeof ViewAuthenticatedRoute
    }
  }
}

interface NoneAuthRouteChildren {
  NoneAuthLoginRoute: typeof NoneAuthLoginRoute
  NoneAuthSignUpRoute: typeof NoneAuthSignUpRoute
}

const NoneAuthRouteChildren: NoneAuthRouteChildren = {
  NoneAuthLoginRoute: NoneAuthLoginRoute,
  NoneAuthSignUpRoute: NoneAuthSignUpRoute,
}

const NoneAuthRouteWithChildren = NoneAuthRoute._addFileChildren(
  NoneAuthRouteChildren,
)

interface ViewAuthenticatedRouteChildren {
  ViewAuthenticatedPostIdRoute: typeof ViewAuthenticatedPostIdRoute
}

const ViewAuthenticatedRouteChildren: ViewAuthenticatedRouteChildren = {
  ViewAuthenticatedPostIdRoute: ViewAuthenticatedPostIdRoute,
}

const ViewAuthenticatedRouteWithChildren =
  ViewAuthenticatedRoute._addFileChildren(ViewAuthenticatedRouteChildren)

interface ViewRouteChildren {
  ViewAuthenticatedRoute: typeof ViewAuthenticatedRouteWithChildren
  ViewIndexRoute: typeof ViewIndexRoute
}

const ViewRouteChildren: ViewRouteChildren = {
  ViewAuthenticatedRoute: ViewAuthenticatedRouteWithChildren,
  ViewIndexRoute: ViewIndexRoute,
}

const ViewRouteWithChildren = ViewRoute._addFileChildren(ViewRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  NoneAuthRoute: NoneAuthRouteWithChildren,
  ViewRoute: ViewRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
